{"version":3,"sources":["api.js","components/Card/Card.js","components/MainView/MainView.js","images/spinner.gif","components/VertBar/VertBar.js","components/DetailView/DetailView.js","components/Footer/Footer.js","images/pokemon-image.png","components/FightCard/FightCard.js","components/FightView/FightView.js","components/ScoreView/ScoreView.js","components/SearchBar/SearchBar.js","App.js","index.js"],"names":["getApiData","url","fetch","then","response","ok","json","Error","error","console","log","Card","name","sprites","id","base_experience","className","src","other","dream_world","front_default","alt","to","MainView","pokemons","useState","currentPage","setCurrentPage","offset","num","currentPageData","slice","map","pokemon","pageCount","Math","ceil","length","previousLabel","nextLabel","onPageChange","selectedPage","selected","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","VertBar","DetailView","useParams","setPokemon","loading","setLoading","random","floor","useEffect","result","catch","e","spinner","height","stats","stat","index","role","style","width","base_stat","aria-valuenow","aria-valuemin","aria-valuemax","Footer","FightCard","score","setAction","axios","require","FightView","pokeId","opponentId","opponent","setOpponent","pokemonScore","setPokemonScore","opponentScore","setOpponentScore","gameOver","setGameOver","pokemonWon","setPokemonWon","opponentWon","setOpponentWon","saveGame","factor","a","post","user","user_pokemon","opponent_pokemon","user_wins","headers","data","calcFight","oldScore","attacker","victim","lucky","fight","poke","oppo","onClick","ScoreView","ownScores","setOwnScore","setError","Table","striped","bordered","hover","variant","responsive","size","rounded","_id","SearchBar","handleUserInput","userInput","setSearch","type","placeholder","aria-label","value","onChange","onKeyDown","key","App","setPokemons","search","setUserInput","triggerSearch","input","fetchAllPokes","allpokemon","results","forEach","fetchPokemonData","pokeData","prevData","Logo","exact","path","preventDefault","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9102288a.chunk.js","sourcesContent":["const getApiData = (url) => {\n    try {\n        return fetch(url).then(response => {\n            if (response.ok) {\n                return response.json()\n            } else {\n                throw new Error(\"Api call failed\")\n            }\n        })\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport { getApiData };","import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport './Card.css'\n\nexport default function Card({ name, sprites, id, base_experience }) {\n\n    return (\n        <div className=\"col-12 col-sm-6 col-md-4 col-lg-3 col-xl-2\">\n            <div className=\"poke-card mb-4 pt-1\">\n                <p className=\"title border\"><strong>{name}</strong> </p>\n                <img src={sprites.other.dream_world.front_default} alt={name} className=\"card-img\"/>\n                <p>xp {base_experience}</p>\n                <Link to={`/${id}`} >\n                    <button className=\"btn btn-poke\">Open</button>\n                </Link>\n            </div>\n        </div>\n    )             \n}\n","import React, {useState} from 'react'\nimport './MainView.css'\nimport Card from '../Card/Card'\n\nimport ReactPaginate from 'react-paginate';\n\nexport default function MainView({ pokemons, error }) {\n    const [currentPage, setCurrentPage] = useState(0);\n    const PER_PAGE = 18;\n    const offset = currentPage * PER_PAGE;\n    let num = 0\n\n    let currentPageData = pokemons && pokemons\n                            .slice(offset, offset + PER_PAGE)\n                            .map((pokemon) => {\n                                num++;\n                                console.log(pokemon)\n                                return <Card key={num} {...pokemon} />\n                            });\n\n    let pageCount = 0;\n    if (pokemons) {\n        pageCount = Math.ceil(pokemons.length / PER_PAGE)\n    }\n\n    const handlePageClick = ({ selected: selectedPage }) => {\n        setCurrentPage(selectedPage);\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"row text-center container-fluid\">\n                {\n                error \n                    ? <h1 className=\"text-white\">Could not find pokemon</h1>\n                    : currentPageData\n                }\n\n                {!error && \n                    <div className=\"col-12 mt-5\">\n                        <ReactPaginate\n                            previousLabel={<i className=\"fas fa-chevron-circle-left mk\"></i>}\n                            nextLabel={<i className=\"fas fa-chevron-circle-right\"></i>}\n                            pageCount={pageCount}\n                            onPageChange={handlePageClick}\n                            containerClassName={\"pagination\"}\n                            previousLinkClassName={\"pagination__link\"}\n                            nextLinkClassName={\"pagination__link\"}\n                            disabledClassName={\"pagination__link--disabled\"}\n                            activeClassName={\"pagination__link--active\"}\n                        />\n                    </div>\n                    \n                    }\n            </div>\n        </div>\n    )\n}\n\n\n\n// <Card style={{ width: '18rem' }}>\n// <Card.Img variant=\"top\" src={pokemon.sprites.front_default} />\n// <Card.Body>\n//     <Card.Title>{pokemon.name}</Card.Title>\n//     <Link to={`/${pokemon.id}`} >\n//         <Button variant=\"primary\">Open</Button>\n//     </Link>\n// </Card.Body>\n// </Card>","export default __webpack_public_path__ + \"static/media/spinner.94cd27f1.gif\";","import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport './VertBar.css'\n\nconst VertBar = () => {\n    return (\n        <div className=\"container\">\n            <div className=\"outer-container\">\n                <Link to=\"/scores\">\n                    <button className=\"btn btn-poke\">Score</button>\n                </Link>\n                <Link to=\"/\">\n                    <button className=\"btn btn-poke\">Home</button>\n                </Link>\n              \n            </div>\n        </div>\n    )\n}\n\nexport default VertBar\n","import React, {useState, useEffect } from 'react'\nimport { useParams } from \"react-router-dom\";\nimport { getApiData } from '../../api'\nimport { Link } from \"react-router-dom\";\nimport spinner from '../../images/spinner.gif'\nimport VertBar from '../VertBar/VertBar';\n\n\n\nconst DetailView = () => {\n    const { id } = useParams()\n    const [pokemon, setPokemon] = useState()\n    const [loading, setLoading] = useState(true)\n    const random = Math.floor(Math.random() * 500);\n\n    useEffect(() => {\n        getApiData(`https://pokeapi.co/api/v2/pokemon/${id}`)\n        .then(result => {\n            setLoading(false)\n            setPokemon(result)\n        })\n        .catch(e => console.log(e))\n    }, [id]);\n    \n\n    if (loading) {\n        return (\n          <div>\n            <img src={spinner} alt=\"spinner\" className=\"spinner\"/>\n          </div>\n        )\n    }\n\n    if (pokemon) {\n        return (\n            <>\n                <VertBar />\n                <div className=\"container bg-light rounded\">\n                    <div className=\"py-3\">\n                        <h2>{pokemon.name}</h2>\n                    </div>\n                    <div className=\"row px-3\">\n                        <div className=\"col-12 col-md-4\">\n                            <img src={pokemon.sprites.other.dream_world.front_default} height=\"250px\" alt={pokemon.name}/>\n                        </div>\n                        <div className=\"col-12 col-md-8\">\n                        <div className=\"ability-container row\">\n                            {pokemon.stats.map((stat, index) => {\n                                return (\n                                    <div key={index} className=\"row col-12 text-left\">\n                                        <div className=\"col-3\">\n                                            <p>{stat.stat.name}</p>\n                                        </div>\n                                        <div className=\"col-9\">\n                                    \n                                            <div  className=\"progress\">\n                                                <div className=\"progress-bar\" \n                                                    role=\"progressbar\" \n                                                    style={{width: `${stat.base_stat}%`}}\n                                                    aria-valuenow={stat.base_stat} \n                                                    aria-valuemin=\"0\" \n                                                    aria-valuemax=\"200\">\n                                                    {stat.base_stat}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                )\n                            })}\n                            </div>\n                        </div>\n                    </div>\n                    <Link to=\"/\">\n                        <button className=\"btn btn-outline-dark my-5\">Back</button>\n                    </Link>\n                    <Link to={`/fight/${id}/${random}`} >\n                        <button className=\"btn btn-poke my-5 m-3\">Fight</button>\n                    </Link>\n                    \n                </div>\n            </>\n        )\n    } else {\n        return (\n            <div>\n              <img src={spinner} alt=\"spinner\" className=\"spinner\"/>\n            </div>\n          )\n    }\n   \n}\n\nexport default DetailView\n","import React from 'react'\nimport './Footer.css'\n\nfunction Footer() {\n    return (\n        <div className=\"pt-3\">\n            <footer className=\"copyrightSign p-3\">@  Copyright by Fred Alicia Mustafa</footer>\n        </div>\n    )\n}\n\nexport default Footer; ","export default __webpack_public_path__ + \"static/media/pokemon-image.fc761376.png\";","import React from 'react'\n\nconst FightCard = ({ pokemon, score, setAction }) => {\n\n    return (\n        <div className=\"fight-card col-12 col-md-6\">\n        <p className=\"title\">{pokemon.name} </p>\n\n\n            <div className=\"row col-12 text-left\">\n                <div className=\"col-4\">\n                    <p>Score</p>\n                </div>\n                <div className=\"col-8\">\n                    <div  className=\"progress\">\n                        <div className=\"progress-bar progress-bar-striped \n                                        progress-bar-animated bg-danger\" \n                            role=\"progressbar\" \n                            style={{width: `${score}%`}}\n                            aria-valuenow={score} \n                            aria-valuemin=\"0\" \n                            aria-valuemax=\"200\">\n                            {score}\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n\n        <img src={\n            pokemon.sprites.other.dream_world.front_default\n            ? pokemon.sprites.other.dream_world.front_default\n            : pokemon.sprites.front_default\n            } alt={pokemon.name} className=\"card-img pb-3\"/>\n        \n            <div className=\"ability-container row\">\n            {pokemon.stats.map((stat, index) => {\n                return (\n                    <div key={index} className=\"row col-12 text-left\">\n                        <div className=\"col-4\">\n                            <p>{stat.stat.name}</p>\n                        </div>\n                        <div className=\"col-8\">\n                            <div  className=\"progress\">\n                                <div className=\"progress-bar\" \n                                    role=\"progressbar\" \n                                    style={{width: `${stat.base_stat}%`}}\n                                    aria-valuenow={stat.base_stat} \n                                    aria-valuemin=\"0\" \n                                    aria-valuemax=\"200\">\n                                    {stat.base_stat}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )\n            })}\n            </div>\n\n        \n    </div>\n    )\n}\n\nexport default FightCard\n","import React, {useState, useEffect } from 'react'\nimport { useParams } from \"react-router-dom\";\nimport { getApiData } from '../../api'\nimport { Link } from \"react-router-dom\";\nimport spinner from '../../images/spinner.gif'\nimport FightCard from '../FightCard/FightCard';\nimport VertBar from '../VertBar/VertBar';\nimport './FightView.css'\nconst axios = require('axios');\n\nconst FightView = () => {\n    const { pokeId, opponentId } = useParams()\n\n    const [pokemon, setPokemon] = useState()\n    const [opponent, setOpponent] = useState()\n    const [pokemonScore, setPokemonScore] = useState(100)\n    const [opponentScore, setOpponentScore] = useState(100)\n    const [loading, setLoading] = useState(true)\n    const [gameOver, setGameOver] = useState(false)\n    const [pokemonWon, setPokemonWon] = useState(false)\n    const [opponentWon, setOpponentWon] = useState(false)\n\n    useEffect(() => {    \n        getApiData(`https://pokeapi.co/api/v2/pokemon/${opponentId}`)\n        .then(result => {\n            setOpponent(result)\n        })\n        .catch(e => console.log(e))\n    }, [opponentId]);\n\n    useEffect(() => {\n        getApiData(`https://pokeapi.co/api/v2/pokemon/${pokeId}`)\n        .then(result => {\n            setPokemon(result)\n            setLoading(false)\n        })\n        .catch(e => console.log(e))\n    }, [pokeId]);\n\n\n    useEffect(() => {\n        if (pokemonWon || opponentWon) {\n            setGameOver(true);\n            saveGame();\n        }\n    }, [pokemonWon, opponentWon])\n \n\n    const reset = () => {\n        setPokemonScore(100)\n        setOpponentScore(100)\n        setOpponentWon(false)\n        setPokemonWon(false)\n        setGameOver(false)\n    }\n\n    const random = (factor) => Math.floor(Math.random() * factor);\n\n    const saveGame = async () => {\n        const response = await axios.post(\n            'https://poke-express-api.herokuapp.com/api/v1/score',\n            { \n                user: `6050dd4f3146d8ebba7cd373`,\n                user_pokemon: pokemon.name,\n                opponent_pokemon: opponent.name,\n                user_wins: pokemonWon\n             },\n            { headers: { 'Content-Type': 'application/json' } }\n          )\n          console.log(response.data)\n    }\n\n\n\n    const calcFight = ( oldScore, attacker, victim ) => {\n        // [1] attack\n        // [2] defence\n        // [3] special-attack\n        // [4] special-defence\n        // [5] speed\n        // substract attackpoints from opponent to own score / 3\n        // add own defence points / 9\n        let lucky = random(4)\n        let score = oldScore \n                    - random(attacker.stats[1].base_stat/3) \n                    + random(victim.stats[2].base_stat/9) \n                    + random(victim.stats[5].base_stat/19)\n\n        // if lucky add bit of defence\n        if (lucky === 1) score += random(victim.stats[4].base_stat/5) \n        // if unlucky reinforce ooponent attack\n        if (lucky === 0) score -= random(attacker.stats[3].base_stat/5)\n\n        if (score >= oldScore) return oldScore\n        if (score <= 0) return 0\n        return score\n    }\n\n    const fight = async () => {\n        const poke = await calcFight(pokemonScore, opponent, pokemon)\n        const oppo = await calcFight(opponentScore, pokemon, opponent)\n\n        setPokemonScore(poke);\n        setOpponentScore(oppo);\n        \n        if (poke <= 0) setOpponentWon(true);\n        if (oppo <= 0) setPokemonWon(true);\n    }\n\n\n    while (loading) {\n        return (\n          <div>\n            <img src={spinner} alt=\"spinner\" className=\"spinner\"/>\n          </div>\n        )\n      }\n\n\n    if (pokemon && opponent) {\n        return (\n            <>\n            \n            <div className=\"container\">\n           \n                <div className=\"container row text-center\">\n                <VertBar />\n                    {pokemonWon && <h1 className=\"text-white\">USER WON</h1>}\n                    {opponentWon && <h1 className=\"text-white\">Opponent WON</h1>}\n                   \n                   <FightCard pokemon={pokemon} setAction={setPokemon} score={pokemonScore}/>\n                   <FightCard pokemon={opponent} setAction={setOpponent} score={opponentScore}/>\n         \n                </div>\n                <div className=\"fight-btn text-center\">\n                    <button className={`btn btn-danger btn-lg m-1 ${gameOver && \"disabled\"}`} onClick={fight} >Fight</button>\n                </div>\n\n\n                <div className=\"btn-container\">\n                    <Link to=\"/\">\n                        <button className=\"btn btn-outline-dark m-1\">Home</button>\n                    </Link>\n                    <Link to={`/${pokeId}`}>\n                        <button className=\"btn btn-outline-dark m-1 mr-5\">Same pokemon - new opponent</button>\n                    </Link>\n                    <button className=\"btn btn-outline-danger m-1\" onClick={reset}>Reset</button>\n\n                </div>\n               \n            </div>\n            </>\n        )\n    } else {\n        return (\n            <div>\n              <img src={spinner} alt=\"spinner\" className=\"spinner\"/>\n            </div>\n          )\n    }\n\n   \n}\n\nexport default FightView\n","import React, {useState, useEffect } from 'react'\nimport { getApiData } from '../../api'\nimport { Table } from 'react-bootstrap';\nimport VertBar from '../VertBar/VertBar';\nimport spinner from '../../images/spinner.gif'\nimport './ScoreView.css'\n\nconst ScoreView = () => {\n\n    // const userUrl = 'https://poke-express-api.herokuapp.com/api/v1/user'\n    const scoreUrl = 'https://poke-express-api.herokuapp.com/api/v1/score/6050dd4f3146d8ebba7cd373'\n\n    // const [users, setUsers] = useState([]);\n    const [ownScores, setOwnScore] = useState([]);\n    const [loading, setLoading] = useState(true)\n    const [error, setError] = useState(false)\n\n    // useEffect(() => {\n    //       getApiData(userUrl)\n    //       .then(result => {\n    //             setUsers(result)\n    //       })\n    //       .catch(e => setError(true))\n    //   }, []);\n\n    useEffect(() => {\n        getApiData(scoreUrl)\n        .then(result => {\n            setOwnScore(result)\n            setLoading(false)\n        })\n        .catch(e => setError(true))\n    }, []);\n\n    if (loading) {\n        return (\n          <div>\n            <img src={spinner} alt=\"spinner\" className=\"spinner\"/>\n          </div>\n        )\n    }\n\n    if (error) {\n        return (\n            <div className=\"bg-danger\">\n                <h2>Error occurred</h2>\n            </div>\n        )\n    }\n    \n    ownScores && console.log(ownScores)\n\n    if (ownScores) {\n        return (\n            <div className=\"container\">\n                <VertBar />\n\n                <h3 className=\"text-white text-center\">Own Scores</h3>\n                <Table striped bordered hover variant=\"light\" responsive size=\"md\" rounded>\n                    <thead>\n                        <tr>\n                            <th>own pokemon</th>\n                            <th>opponent pokemon</th>\n                            <th># Won</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n\n                    {ownScores.map(score => {\n                        return (\n                            <tr key={score._id}>\n                                <td>{score.user_pokemon}</td>\n                                <td>{score.opponent_pokemon}</td>\n                                <td>{score.user_wins === true \n                                        ? <span className=\"won\">Won</span> \n                                        : <span className=\"lost\">Lost</span> }\n                                </td>\n                            </tr>\n                        )\n                    })}\n\n                    </tbody>\n                </Table>\n\n                <hr />\n\n                {/* <Table striped bordered hover variant=\"dark\">\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Username</th>\n                            <th>Email</th>\n                            <th># Won</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n\n                    {users.map(user => {\n                        return (\n                            <tr>\n                                <td>1</td>\n                                <td>{user.username}</td>\n                                <td>{user.email}</td>\n                                <td>12</td>\n                            </tr>\n                        )\n                    })}\n\n                    </tbody>\n                </Table> */}\n            </div>\n        )\n    }\n    \n}\n\nexport default ScoreView\n","import React from 'react'\nimport './SearchBar.css'\n\nconst SearchBar = ({handleUserInput, userInput, setSearch}) => {\n\n    const _handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n            setSearch(userInput)\n          }\n    }\n\n    return (\n        <div className=\"input-wrapper\">\n            <input\n                type=\"search\" \n                placeholder=\"Search ... \" \n                aria-label=\"Search\" \n                value={userInput}\n                onChange={handleUserInput}\n                className=\"search-bar\"\n                onKeyDown={_handleKeyDown}\n            />\n        </div>\n    )\n    \n}\n\nexport default SearchBar;","import React, {useState, useEffect } from 'react'\nimport './App.css';\nimport { getApiData } from './api'\nimport { Switch, Route } from \"react-router-dom\";\nimport MainView from './components/MainView/MainView'\nimport DetailView from './components/DetailView/DetailView'\nimport Footer from './components/Footer/Footer'\nimport Logo from './images/pokemon-image.png'\nimport spinner from './images/spinner.gif'\nimport FightView from './components/FightView/FightView';\nimport ScoreView from './components/ScoreView/ScoreView';\nimport SearchBar from './components/SearchBar/SearchBar';\n\nconst pokeUrl = \"https://pokeapi.co/api/v2/pokemon?limit=90\"\n\nconst App = () => {\n\n  const [pokemons, setPokemons] = useState([]);\n  const [loading, setLoading] = useState(true)\n  const [search, setSearch] = useState(\"\");\n  const [userInput, setUserInput] = useState(\"\")\n  const [error, setError] = useState(false)\n  \n  // useEffect(() => {\n  //   fetchAllPokes(pokeUrl)\n  // }, []);\n\n  useEffect(() => {\n    triggerSearch(search)\n  }, [search])\n\n  const handleUserInput = (e) => {\n    e.preventDefault();\n    setUserInput(e.target.value);\n  }\n\n  const triggerSearch = (input) => {\n    if (input === \"\") {\n      setError(false)\n      fetchAllPokes(pokeUrl)\n    } \n    else {\n      console.log(\"search triggered\")\n        getApiData(`https://pokeapi.co/api/v2/pokemon/${input}`)\n        .then(pokemon => {\n          setPokemons([pokemon,])\n        }).catch(e => setError(true))\n\n    }\n  };\n\n  const fetchAllPokes = (url) => {\n    getApiData(url).then(\n      (allpokemon) => {\n        allpokemon && allpokemon.results.forEach((pokemon) => {\n          fetchPokemonData(pokemon); \n        })\n      })\n   }\n\n\n  const fetchPokemonData = (pokemon) => {\n    let url = pokemon.url\n    getApiData(url)\n      .then((pokeData) => {\n        setLoading(false);\n        setPokemons(prevData => [...prevData, pokeData]);\n      })\n  }\n  \n  if (loading) {\n    return (\n      <div>\n        <img src={spinner} alt=\"spinner\" className=\"spinner\"/>\n      </div>\n    )\n  }\n  \n  if (pokemons) {\n  \n    return (\n    <div className=\"App\">\n\n      <div className=\"text-center pb-2\">\n        <img src={Logo} alt=\"logo\" className=\"logo-img\"/>\n      </div>\n    \n\n      <Switch>\n        <Route exact path=\"/\">\n          <SearchBar handleUserInput={handleUserInput} userInput={userInput} setSearch={setSearch}/>\n          <MainView pokemons={pokemons} error={error} />\n        </Route>\n\n        <Route exact path=\"/scores\">\n          <ScoreView />\n        </Route>\n\n        <Route exact path=\"/:id\">\n            <DetailView />\n        </Route>\n\n        <Route exact path=\"/fight/:pokeId/:opponentId\">\n            <FightView />\n        </Route>\n\n\n\n\n      </Switch>\n      <Footer />\n\n    </div>\n  );\n} else {\n  return <h1>WTF</h1>\n}\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById('root')\n);"],"sourceRoot":""}